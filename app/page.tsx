"use client";

import React from "react";
import { ShootingStars } from "@/components/ui/shooting-stars";
import { StarsBackground } from "@/components/ui/stars-background";
import { FloatingDock } from "@/components/ui/floating-dock";
import ShinyButton from "@/components/ui/shiny-button";
import { motion } from "framer-motion";
import { Carousel, Card } from "@/components/ui/apple-cards-carousel";
import Image from "next/image";
import { SparklesCore } from "@/components/ui/sparkles";
import { PinContainer } from "@/components/ui/3d-pin";
import { AnimatedTestimonials } from "@/components/ui/animated-testimonials";
import { Timeline } from "@/components/ui/timeline";
import { TypewriterEffectSmooth } from "@/components/ui/typewriter-effect";
import { RainbowButton } from "@/components/ui/rainbow-button";
import OrbitingCircles from "@/components/ui/orbiting-circles";
import WorldMap from "@/components/ui/world-map";
import { useWindowSize } from '@/hooks/useWindowSize';
import Link from "next/link"
import {
  IconBrandGithub,
  IconTerminal2,
  IconBrandLinkedin,
  IconInfoCircle,
  IconMessageDots,
  IconUserCircle,
} from "@tabler/icons-react";
import { TextGenerateEffect } from "@/components/ui/text-generate-effect";
import SparklesText from "@/components/ui/sparkles-text";
import BlurIn from "@/components/ui/blur-in";

function CustomGridDemo() {

    const size = useWindowSize();
  const isMobile = size.width < 640; // Tailwind's `sm` breakpoint is 640px

  const testimonials = [
    {
      quote:
        "Kunal consistently delivers his freelance projects quickly and efficiently, demonstrating exceptional teamwork and strong work ethics. His dedication and professionalism make him a valuable asset to any team.",
      name: "Ishaan Gupta",
      designation: "Satisfied Client",
      src: "/images/ishaan.jpg",
    },
    {
      quote:
        "Iâ€™ve witnessed his exceptional skill in both full-stack development and machine learning, consistently delivering robust, user-focused solutions. His technical expertise and results-driven approach make him invaluable to any project or team.",
      name: "Vibhanshu Pandey",
      designation: "Satisfied Client",
      src: "/images/vibhanshu.png",
    },
  ];

  const data1 = [
    {
      title: "2024",
      content: (
        <div>
          <p className="text-neutral-300 dark:text-neutral-200 text-xs md:text-sm font-normal mb-4 md:mb-8">
            Won Rajasthan Police Hackathon
          </p>
          <p className="text-neutral-300 dark:text-neutral-200 text-xs md:text-sm font-normal mb-4 md:mb-8">
            Built Project PixaShield, SocialMood and FraudFinder. Project PixaShield stood as the top performing project at Rajasthan Police Hackathon 1.0
          </p>
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <Image
              src="/images/Pixashield.webp"
              alt="PixaShield project"
              width={500}
              height={500}
              className="rounded-lg object-cover h-40 sm:h-44 lg:h-60 w-full shadow-[0_0_24px_rgba(34,_42,_53,_0.06),_0_1px_1px_rgba(0,_0,_0,_0.05),_0_0_0_1px_rgba(34,_42,_53,_0.04),_0_0_4px_rgba(34,_42,_53,_0.08),_0_16px_68px_rgba(47,_48,_55,_0.05),_0_1px_0_rgba(255,_255,_255,_0.1)_inset]"
            />
            <Image
              src="/images/FraudFinder.webp"
              alt="FraudFinder project"
              width={500}
              height={500}
              className="rounded-lg object-cover h-40 sm:h-44 lg:h-60 w-full shadow-[0_0_24px_rgba(34,_42,_53,_0.06),_0_1px_1px_rgba(0,_0,_0,_0.05),_0_0_0_1px_rgba(34,_42,_53,_0.04),_0_0_4px_rgba(34,_42,_53,_0.08),_0_16px_68px_rgba(47,_48,_55,_0.05),_0_1px_0_rgba(255,_255,_255,_0.1)_inset]"
            />
            <Image
              src="/images/SocialMood.png"
              alt="SocialMood project"
              width={500}
              height={500}
              className="rounded-lg object-cover h-40 sm:h-44 lg:h-60 w-full shadow-[0_0_24px_rgba(34,_42,_53,_0.06),_0_1px_1px_rgba(0,_0,_0,_0.05),_0_0_0_1px_rgba(34,_42,_53,_0.04),_0_0_4px_rgba(34,_42,_53,_0.08),_0_16px_68px_rgba(47,_48,_55,_0.05),_0_1px_0_rgba(255,_255,_255,_0.1)_inset]"
            />
          </div>
        </div>
      ),
    },
    {
      title: "2023",
      content: (
        <div>
          <p className="text-neutral-300 dark:text-neutral-200 text-xs md:text-sm font-normal mb-4">
            Research and Development Intern
          </p>
          <p className="text-neutral-300 dark:text-neutral-200 text-xs md:text-sm font-normal mb-4">
            I worked as a research and development intern at Holo Inventions Inc. for a duration of 6 months.
          </p>
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <Image
              src="/images/holo 1.webp"
              alt="Holo Inventions Inc. 1"
              width={500}
              height={500}
              className="rounded-lg object-cover h-40 sm:h-44 lg:h-60 w-full shadow-[0_0_24px_rgba(34,_42,_53,_0.06),_0_1px_1px_rgba(0,_0,_0,_0.05),_0_0_0_1px_rgba(34,_42,_53,_0.04),_0_0_4px_rgba(34,_42,_53,_0.08),_0_16px_68px_rgba(47,_48,_55,_0.05),_0_1px_0_rgba(255,_255,_255,_0.1)_inset]"
            />
            <Image
              src="/images/holo 2.webp"
              alt="Holo Inventions Inc. 2"
              width={500}
              height={500}
              className="rounded-lg object-cover h-40 sm:h-44 lg:h-60 w-full shadow-[0_0_24px_rgba(34,_42,_53,_0.06),_0_1px_1px_rgba(0,_0,_0,_0.05),_0_0_0_1px_rgba(34,_42,_53,_0.04),_0_0_4px_rgba(34,_42,_53,_0.08),_0_16px_68px_rgba(47,_48,_55,_0.05),_0_1px_0_rgba(255,_255,_255,_0.1)_inset]"
            />
          </div>
        </div>
      ),
    },
    {
      title: "Early 2023",
      content: (
        <div>
          <p className="text-neutral-300 dark:text-neutral-200 text-xs md:text-sm font-normal mb-4 md:mb-8">
            Developed ML models and Full stack websites
          </p>
          <p className="text-neutral-300 dark:text-neutral-200 text-xs md:text-sm font-normal mb-4 md:mb-8">
            Manufacturing defect detection model helped me stand as a Runner up at Deep Learning Hackathon. I also developed a CodingHub which was a Fullstack website.
          </p>
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <Image
              src="/images/broken detection.webp"
              alt="Manufacturing defect detection"
              width={500}
              height={500}
              className="rounded-lg object-cover h-40 sm:h-44 lg:h-60 w-full shadow-[0_0_24px_rgba(34,_42,_53,_0.06),_0_1px_1px_rgba(0,_0,_0,_0.05),_0_0_0_1px_rgba(34,_42,_53,_0.04),_0_0_4px_rgba(34,_42,_53,_0.08),_0_16px_68px_rgba(47,_48,_55,_0.05),_0_1px_0_rgba(255,_255,_255,_0.1)_inset]"
            />
            <Image
              src="/images/codinghub.png"
              alt="CodingHub"
              width={500}
              height={500}
              className="rounded-lg object-cover h-40 sm:h-44 lg:h-60 w-full shadow-[0_0_24px_rgba(34,_42,_53,_0.06),_0_1px_1px_rgba(0,_0,_0,_0.05),_0_0_0_1px_rgba(34,_42,_53,_0.04),_0_0_4px_rgba(34,_42,_53,_0.08),_0_16px_68px_rgba(47,_48,_55,_0.05),_0_1px_0_rgba(255,_255,_255,_0.1)_inset]"
            />
          </div>
        </div>
      ),
    },
  ];

  const words = [
    {
      text: "Take",
    },
    {
      text: "your",
    },
    {
      text: "websites",
    },
    {
      text: "to",
    },
    {
      text: "next",
      className: "text-blue-300 dark:text-blue-500",
    },
    {
      text: "level",
      className: "text-blue-300 dark:text-blue-500",
    },
    {
      text: "with",
    },
    {
      text: "me",
      className: "text-blue-300 dark:text-blue-500",
    },
  ];

  const links = [
    {
      title: "About",
      icon: <IconInfoCircle className="h-4 w-4 sm:h-5 sm:w-5 md:h-6 md:w-6 text-neutral-500 dark:text-neutral-300" />,
      href: "#about",
    },
    {
      title: "Projects",
      icon: <IconTerminal2 className="h-4 w-4 sm:h-5 sm:w-5 md:h-6 md:w-6 text-neutral-500 dark:text-neutral-300" />,
      href: "#projects",
    },
    {
      title: "Testimonials",
      icon: <IconUserCircle className="h-4 w-4 sm:h-5 sm:w-5 md:h-6 md:w-6 text-neutral-500 dark:text-neutral-300" />,
      href: "#testimonials",
    },
    {
      title: "Contact",
      icon: <IconMessageDots className="h-4 w-4 sm:h-5 sm:w-5 md:h-6 md:w-6 text-neutral-500 dark:text-neutral-300" />,
      href: "#contact",
    },
    {
      title: "LinkedIn",
      icon: <IconBrandLinkedin className="h-4 w-4 sm:h-5 sm:w-5 md:h-6 md:w-6 text-neutral-500 dark:text-neutral-300" />,
      href: "https://linkedin.com/in/kunal-pawar4103",
    },
    {
      title: "GitHub",
      icon: <IconBrandGithub className="h-4 w-4 sm:h-5 sm:w-5 md:h-6 md:w-6 text-neutral-500 dark:text-neutral-300" />,
      href: "https://github.com/Kp4103",
    },
  ];
   
  const data = [
    {
      category: "AI&ML engineer",
      title: "Currently studying AI&ML.",
      src: "https://images.unsplash.com/photo-1618230710477-ba90a649a0aa?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
 
    },
    {
      category: "Productivity",
      title: " Elevate your productivity through seamless collaboration.",
      src: "https://images.unsplash.com/photo-1583223667854-e0e05b1ad4f3?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",

    },
    {
      category: "Interests",
      title: "Passionate about exploring and implementing the latest innovations.",
      src: "https://images.unsplash.com/photo-1607799279861-4dd421887fb3?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",

    },
   
    {
      category: "Tech Enthusiast",
      title: "Exploring the forefront of technology and its transformative power.",
      src: "https://images.unsplash.com/photo-1581090464777-f3220bbe1b8b?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",

    },
    {
      category: "Design Thinking",
      title: "Creating intuitive and user-centric designs that inspire.",
      src: "https://images.unsplash.com/photo-1618788372246-79faff0c3742?q=80&w=1854&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",

    },
    {
      category: "Entrepreneurship",
      title: "Building scalable solutions with a focus on sustainable growth.",
      src: "https://images.unsplash.com/photo-1608999383953-d61f5d9c1ace?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",

    },
  ];

  const Icons = {
    HTML: () => (
      <svg width="800px" height="800px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M6 28L4 3H28L26 28L16 31L6 28Z" fill="#E44D26"/>
      <path d="M26 5H16V29.5L24 27L26 5Z" fill="#F16529"/>
      <path d="M9.5 17.5L8.5 8H24L23.5 11H11.5L12 14.5H23L22 24L16 26L10 24L9.5 19H12.5L13 21.5L16 22.5L19 21.5L19.5 17.5H9.5Z" fill="white"/>
      </svg>
    ),
    CSS: () => (
      <svg width="800px" height="800px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M6 28L4 3H28L26 28L16 31L6 28Z" fill="#1172B8"/>
      <path d="M26 5H16V29.5L24 27L26 5Z" fill="#33AADD"/>
      <path d="M19.5 17.5H9.5L9 14L17 11.5H9L8.5 8.5H24L23.5 12L17 14.5H23L22 24L16 26L10 24L9.5 19H12.5L13 21.5L16 22.5L19 21.5L19.5 17.5Z" fill="white"/>
      </svg>
    ),
    JS: () => (
      <svg width="800px" height="800px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M17.1725 2.29872C16.4627 1.89953 15.5373 1.90132 14.8269 2.29872C11.2689 4.26227 7.71082 6.22641 4.15216 8.18906C3.45969 8.55335 2.99264 9.29698 3.00009 10.0688V21.9328C2.99509 22.7197 3.48622 23.4705 4.19655 23.8298C5.21871 24.3736 6.2118 24.9726 7.25244 25.4802C8.45451 26.0709 9.95843 26.2015 11.1752 25.5855C12.1629 25.075 12.6016 23.9395 12.6003 22.896C12.6083 18.9806 12.6016 15.0651 12.6034 11.1496C12.6269 10.9756 12.4962 10.7896 12.3064 10.7938C11.8517 10.7866 11.3964 10.7896 10.9417 10.7926C10.7699 10.7764 10.6022 10.9191 10.6152 11.0918C10.6091 14.982 10.6164 18.8734 10.6115 22.7642C10.6214 23.3024 10.2578 23.8196 9.73913 24.0014C8.5412 24.4213 5.12198 22.2012 5.12198 22.2012C4.9965 22.1431 4.91682 22.007 4.92912 21.8718C4.92912 17.9576 4.92973 14.0433 4.92912 10.1297C4.91187 9.97191 5.00912 9.8298 5.15402 9.76538C8.70033 7.8134 12.2448 5.85654 15.7911 3.90336C15.9143 3.82115 16.086 3.8214 16.2089 3.90396C19.7552 5.85654 23.3003 7.81161 26.8472 9.76368C26.9926 9.828 27.0857 9.9725 27.0709 10.1297C27.0703 14.0433 27.0721 17.9576 27.0697 21.8713C27.0802 22.0098 27.0086 22.144 26.8793 22.2048C23.3661 24.1462 19.8129 26.025 16.3315 28.0228C16.1796 28.1099 16.0075 28.2086 15.8373 28.1126C14.9218 27.6062 14.0174 27.0801 13.1049 26.5688C13.0057 26.5069 12.8794 26.4803 12.7759 26.5496C12.3668 26.7652 11.982 26.9398 11.5122 27.1258C10.8524 27.387 10.9578 27.4938 11.5529 27.8405C12.62 28.4444 13.6889 29.0459 14.756 29.6504C15.4585 30.0888 16.4024 30.12 17.1275 29.7149C20.6861 27.7538 24.2436 25.7904 27.8029 23.8293C28.5113 23.468 29.0049 22.7202 28.9999 21.9327V10.0688C29.0068 9.31264 28.5576 8.58227 27.886 8.21259C24.3156 6.23947 20.7435 4.27064 17.1725 2.29872Z" fill="#8CC84B"/>
      <path d="M22.5419 11.2062C21.1452 10.459 19.4836 10.4192 17.9315 10.5169C16.8102 10.6277 15.6309 10.9371 14.814 11.7409C13.9761 12.5489 13.7937 13.8537 14.1917 14.9085C14.4769 15.6539 15.1948 16.1386 15.9372 16.395C16.8935 16.7326 17.8979 16.837 18.9026 16.9414C19.819 17.0366 20.7357 17.1319 21.6165 17.4042C21.9763 17.5234 22.3953 17.7058 22.5055 18.0973C22.6073 18.5609 22.4957 19.0998 22.1193 19.4219C20.9237 20.3682 17.5979 20.2232 16.4166 19.4784C15.939 19.1611 15.7332 18.5994 15.6495 18.0641C15.6402 17.8973 15.5059 17.7443 15.3248 17.757C14.8713 17.7516 14.4178 17.7528 13.9643 17.7564C13.8061 17.7431 13.6416 17.8557 13.6329 18.0172C13.5397 20.4689 15.7914 21.5377 17.9039 21.773C19.1108 21.888 20.3442 21.8814 21.5327 21.6224C22.4261 21.419 23.3219 21.0444 23.9369 20.3563C24.6953 19.52 24.8444 18.2749 24.5043 17.2332C24.2443 16.4559 23.5012 15.9573 22.7416 15.7008C21.7086 15.3466 20.4844 15.1562 19.5488 15.0671C18.1889 14.9376 16.5729 14.9905 16.188 14.0969C16.0345 13.629 16.1651 13.048 16.5951 12.7602C17.7328 11.9885 20.0483 12.091 21.2265 12.6675C21.7675 12.9384 22.081 13.4948 22.2104 14.0565C22.2344 14.2215 22.3454 14.3937 22.5364 14.3865C22.9868 14.3955 23.4372 14.3889 23.8875 14.3895C24.0422 14.4003 24.2116 14.313 24.2418 14.1546C24.2227 12.9806 23.6232 11.7788 22.5419 11.2062Z" fill="#8CC84B"/>
      </svg>
    ),
    Next: () => (
      <svg width="800px" height="800px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><title>folder_type_next_opened</title><path d="M27.4,5.5H18.2L16.1,9.7H4.3v4H.5L4.3,26.5H29.5V5.5ZM20.2,7.6h7.1V9.7H19.2Zm5.5,6.1H6.6V11.8H27.4v7.626Z" style={{fill:'#dcb67a'}}/><circle cx="21" cy="21" r="10" style={{fill:'#e5e5e5'}}/><path d="M29.919,19.691a9.036,9.036,0,0,0-6.157-7.271,9.444,9.444,0,0,0-1.873-.392c-.169-.018-1.332-.037-1.478-.023h0c-.039,0-.162.016-.273.024a9.023,9.023,0,0,0-6.468,3.73,8.9,8.9,0,0,0-1.589,3.932A6.9,6.9,0,0,0,12,21a6.891,6.891,0,0,0,.081,1.31,9.035,9.035,0,0,0,6.157,7.271,9.5,9.5,0,0,0,1.9.4,17.092,17.092,0,0,0,1.724,0,9.084,9.084,0,0,0,3.243-.949c.155-.079.185-.1.164-.118s-.674-.9-1.466-1.965L22.364,25l-1.8-2.668c-.992-1.468-1.809-2.668-1.816-2.668s-.014,1.184-.017,2.632a20.7,20.7,0,0,1-.039,2.7.315.315,0,0,1-.155.16c-.056.029-.105.034-.371.034h-.3l-.08-.051a.33.33,0,0,1-.118-.129l-.037-.079,0-3.527,0-3.529.055-.069a.483.483,0,0,1,.13-.107c.072-.035.1-.039.4-.039.359,0,.419.014.512.116.026.028,1,1.5,2.171,3.271l3.551,5.378,1.425,2.158.072-.047a9.223,9.223,0,0,0,1.85-1.622,8.957,8.957,0,0,0,2.118-4.6A6.891,6.891,0,0,0,30,21,6.9,6.9,0,0,0,29.919,19.691Zm-5.632,1.193,0,3.163-.558-.855-.56-.855v-2.3c0-1.487.007-2.323.018-2.363a.36.36,0,0,1,.174-.222c.072-.037.1-.04.375-.04.26,0,.306,0,.364.035a.357.357,0,0,1,.178.208C24.287,17.7,24.29,18.68,24.287,20.884Z"/></svg>
    ),
    Mongo: () => (
      <svg width="800px" height="800px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" ><defs><linearGradient id="a" x1="-645.732" y1="839.188" x2="-654.59" y2="839.25" gradientTransform="matrix(-0.977, -0.323, -0.29, 0.877, -375.944, -928.287)" gradientUnits="userSpaceOnUse"><stop offset="0.231" stop-color="#999875"/><stop offset="0.563" stop-color="#9b9977"/><stop offset="0.683" stop-color="#a09f7e"/><stop offset="0.768" stop-color="#a9a889"/><stop offset="0.837" stop-color="#b7b69a"/><stop offset="0.896" stop-color="#c9c7b0"/><stop offset="0.948" stop-color="#deddcb"/><stop offset="0.994" stop-color="#f8f6eb"/><stop offset="1" stop-color="#fbf9ef"/></linearGradient><linearGradient id="b" x1="-644.287" y1="823.405" x2="-657.028" y2="845.476" gradientTransform="matrix(-0.977, -0.323, -0.29, 0.877, -375.944, -928.287)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#48a547"/><stop offset="1" stop-color="#3f9143"/></linearGradient><linearGradient id="c" x1="-643.386" y1="839.485" x2="-652.418" y2="833.417" gradientTransform="matrix(-0.977, -0.323, -0.29, 0.877, -375.944, -928.287)" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#41a247"/><stop offset="0.352" stop-color="#4ba74b"/><stop offset="0.956" stop-color="#67b554"/><stop offset="1" stop-color="#69b655"/></linearGradient></defs><title>file_type_mongo</title><path d="M16.62,30l-.751-.249s.1-3.8-1.275-4.067c-.9-1.048.133-44.741,3.423-.149a2.712,2.712,0,0,0-1.333,1.523A14.1,14.1,0,0,0,16.62,30Z" style={{fill:'url(#a)'}}/><path d="M17.026,26.329a13.223,13.223,0,0,0,5-13.225C20.556,6.619,17.075,4.487,16.7,3.673a9.792,9.792,0,0,1-.825-1.6l.277,18.069S15.578,25.664,17.026,26.329Z" style={{fill:'url(#b)'}}/><path d="M15.487,26.569S9.366,22.4,9.72,15.025A15.54,15.54,0,0,1,15.239,3.377,1.725,1.725,0,0,0,15.846,2c.381.82.319,12.243.359,13.579C16.36,20.776,15.916,25.588,15.487,26.569Z" style={{fill:'url(#c)'}}/></svg>
    ),
    Mysql: () => (
      <svg width="800px" height="800px" viewBox="-18.458 -22.75 191.151 191.151" xmlns="http://www.w3.org/2000/svg"><path d="M-18.458 6.58h191.151v132.49H-18.458V6.58z" fill="none"/><path d="M40.054 113.583h-5.175c-.183-8.735-.687-16.947-1.511-24.642h-.046l-7.879 24.642h-3.94l-7.832-24.642h-.045c-.581 7.388-.947 15.602-1.099 24.642H7.81c.304-10.993 1.068-21.299 2.289-30.919h6.414l7.465 22.719h.046l7.511-22.719h6.137c1.344 11.268 2.138 21.575 2.382 30.919M62.497 90.771c-2.107 11.434-4.887 19.742-8.337 24.928-2.688 3.992-5.633 5.99-8.84 5.99-.855 0-1.91-.258-3.16-.77v-2.757c.611.088 1.328.138 2.152.138 1.498 0 2.702-.412 3.62-1.238 1.098-1.006 1.647-2.137 1.647-3.388 0-.858-.428-2.612-1.282-5.268L42.618 90.77h5.084l4.076 13.19c.916 2.995 1.298 5.086 1.145 6.277 2.229-5.953 3.786-12.444 4.673-19.468h4.901v.002z" fill="#5d87a1"/><path d="M131.382 113.583h-14.7V82.664h4.945v27.113h9.755v3.806zM112.834 114.33l-5.684-2.805c.504-.414.986-.862 1.42-1.381 2.416-2.838 3.621-7.035 3.621-12.594 0-10.229-4.014-15.346-12.045-15.346-3.938 0-7.01 1.298-9.207 3.895-2.414 2.84-3.619 7.022-3.619 12.551 0 5.435 1.068 9.422 3.205 11.951 1.955 2.291 4.902 3.438 8.843 3.438 1.47 0 2.819-.18 4.048-.543l7.4 4.308 2.018-3.474zm-18.413-6.934c-1.252-2.014-1.878-5.248-1.878-9.707 0-7.785 2.365-11.682 7.1-11.682 2.475 0 4.289.932 5.449 2.792 1.25 2.017 1.879 5.222 1.879 9.619 0 7.849-2.367 11.774-7.099 11.774-2.476.001-4.29-.928-5.451-2.796M85.165 105.013c0 2.622-.962 4.773-2.884 6.458-1.924 1.678-4.504 2.519-7.737 2.519-3.024 0-5.956-.966-8.794-2.888l1.329-2.655c2.442 1.223 4.653 1.831 6.638 1.831 1.863 0 3.319-.413 4.375-1.232 1.055-.822 1.684-1.975 1.684-3.433 0-1.837-1.281-3.407-3.631-4.722-2.167-1.19-6.501-3.678-6.501-3.678-2.349-1.712-3.525-3.55-3.525-6.578 0-2.506.877-4.529 2.632-6.068 1.757-1.545 4.024-2.315 6.803-2.315 2.87 0 5.479.769 7.829 2.291l-1.192 2.656c-2.01-.854-3.994-1.281-5.951-1.281-1.585 0-2.809.381-3.66 1.146-.858.762-1.387 1.737-1.387 2.933 0 1.828 1.308 3.418 3.722 4.759 2.196 1.192 6.638 3.723 6.638 3.723 2.409 1.709 3.612 3.53 3.612 6.534" fill="#f8981d"/><path d="M137.59 72.308c-2.99-.076-5.305.225-7.248 1.047-.561.224-1.453.224-1.531.933.303.3.338.784.601 1.198.448.747 1.229 1.752 1.942 2.276.783.6 1.569 1.194 2.393 1.717 1.453.899 3.1 1.422 4.516 2.318.825.521 1.645 1.195 2.471 1.756.406.299.666.784 1.193.971v-.114c-.264-.336-.339-.822-.598-1.196l-1.122-1.082c-1.084-1.456-2.431-2.727-3.884-3.771-1.196-.824-3.812-1.944-4.297-3.322l-.076-.076c.822-.077 1.797-.375 2.578-.604 1.271-.335 2.43-.259 3.734-.594.6-.15 1.195-.338 1.797-.523v-.337c-.676-.673-1.158-1.567-1.869-2.203-1.902-1.643-3.998-3.25-6.164-4.595-1.16-.749-2.652-1.231-3.887-1.868-.445-.225-1.195-.336-1.457-.71-.67-.822-1.047-1.904-1.533-2.877-1.08-2.053-2.129-4.331-3.061-6.502-.674-1.456-1.084-2.91-1.906-4.257-3.85-6.35-8.031-10.196-14.457-13.971-1.381-.786-3.024-1.121-4.779-1.533l-2.803-.148c-.598-.262-1.197-.973-1.719-1.309-2.132-1.344-7.621-4.257-9.189-.411-1.01 2.431 1.494 4.821 2.354 6.054.635.856 1.458 1.83 1.902 2.802.263.635.337 1.309.6 1.98.598 1.644 1.157 3.473 1.943 5.007.41.782.857 1.604 1.381 2.312.3.414.822.597.936 1.272-.521.744-.562 1.867-.861 2.801-1.344 4.221-.819 9.45 1.086 12.552.596.934 2.018 2.99 3.92 2.202 1.684-.672 1.311-2.801 1.795-4.668.111-.451.038-.747.262-1.043v.073c.521 1.045 1.047 2.052 1.53 3.1 1.159 1.829 3.177 3.735 4.858 5.002.895.676 1.604 1.832 2.725 2.245V74.1h-.074c-.227-.335-.559-.485-.857-.745-.674-.673-1.42-1.495-1.943-2.241-1.566-2.093-2.952-4.41-4.182-6.801-.602-1.16-1.121-2.428-1.606-3.586-.226-.447-.226-1.121-.601-1.346-.562.821-1.381 1.532-1.791 2.538-.711 1.609-.785 3.588-1.049 5.646l-.147.072c-1.19-.299-1.604-1.53-2.056-2.575-1.119-2.654-1.307-6.914-.336-9.976.26-.783 1.385-3.249.936-3.995-.225-.715-.973-1.122-1.383-1.685-.482-.708-1.01-1.604-1.346-2.39-.896-2.091-1.347-4.408-2.312-6.498-.451-.974-1.234-1.982-1.868-2.879-.712-1.008-1.495-1.718-2.058-2.913-.186-.411-.447-1.083-.148-1.53.073-.3.225-.412.523-.487.484-.409 1.867.111 2.352.336 1.385.56 2.543 1.083 3.699 1.867.523.375 1.084 1.085 1.755 1.272h.786c1.193.26 2.538.072 3.661.41 1.979.636 3.772 1.569 5.38 2.576 4.893 3.103 8.928 7.512 11.652 12.778.447.858.637 1.644 1.045 2.539.787 1.832 1.76 3.7 2.541 5.493.785 1.755 1.533 3.547 2.654 5.005.559.784 2.805 1.195 3.812 1.606.745.335 1.905.633 2.577 1.044 1.271.783 2.537 1.682 3.732 2.543.595.448 2.465 1.382 2.576 2.13M99.484 39.844a5.82 5.82 0 0 0-1.529.188v.075h.072c.301.597.824 1.011 1.197 1.532.301.599.562 1.193.857 1.791l.072-.074c.527-.373.789-.971.789-1.868-.227-.264-.262-.522-.451-.784-.22-.374-.705-.56-1.007-.86" fill="#5d87a1"/><path d="M141.148 113.578h.774v-3.788h-1.161l-.947 2.585-1.029-2.585h-1.118v3.788h.731v-2.882h.041l1.078 2.882h.557l1.074-2.882v2.882zm-6.235 0h.819v-3.146h1.072v-.643h-3.008v.643h1.115l.002 3.146z" fill="#f8981d"/></svg>
    ),
    firebase: () => (
      <svg width="800px" height="800px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><title>file_type_firebase</title><path d="M5.8,24.6l.17-.237L13.99,9.149l.017-.161L10.472,2.348a.656.656,0,0,0-1.227.207Z" style={{fill:'#ffc24a'}}/><path d="M5.9,24.42l.128-.25L13.965,9.114,10.439,2.448a.6.6,0,0,0-1.133.206Z" style={{fill:'#ffa712'}}/><path d="M16.584,14.01l2.632-2.7L16.583,6.289a.678.678,0,0,0-1.195,0L13.981,8.971V9.2Z" style={{fill:'#f4bd62'}}/><path d="M16.537,13.9l2.559-2.62L16.537,6.4a.589.589,0,0,0-1.074-.047L14.049,9.082l-.042.139Z" style={{fill:'#ffa50e'}}/><polygon points="5.802 24.601 5.879 24.523 6.158 24.41 16.418 14.188 16.548 13.834 13.989 8.956 5.802 24.601" style={{fill:'#f6820'}} /><path d="M16.912,29.756,26.2,24.577,23.546,8.246A.635.635,0,0,0,22.471,7.9L5.8,24.6l9.233,5.155a1.927,1.927,0,0,0,1.878,0" style={{fill:'#fde068'}}/><path d="M26.115,24.534,23.483,8.326a.557.557,0,0,0-.967-.353L5.9,24.569l9.131,5.1a1.912,1.912,0,0,0,1.863,0Z" style={{fill:'#fcca3f'}}/><path d="M16.912,29.6a1.927,1.927,0,0,1-1.878,0L5.876,24.522,5.8,24.6l9.233,5.155a1.927,1.927,0,0,0,1.878,0L26.2,24.577l-.023-.14Z" style={{fill:'#eeab37'}}/></svg>
    ),
    tf: () => (
      <svg width="800px" height="800px" viewBox="-9 0 274 274" version="1.1" xmlns="http://www.w3.org/2000/svg"  preserveAspectRatio="xMidYMid">
          <g>
              <path d="M145.726081,42.0651946 L145.726081,84.1347419 L218.586952,126.204312 L218.586952,84.1347419 L145.726081,42.0651946 Z M-1.98726454e-07,84.1347419 L-1.98726454e-07,126.204312 L36.4304238,147.234755 L36.4304238,105.169527 L-1.98726454e-07,84.1347419 Z M109.291294,105.169527 L72.8608701,126.204312 L72.8608701,252.404316 L109.291294,273.439101 L109.291294,189.304303 L145.726081,210.339088 L145.726081,168.26954 L109.291294,147.234755 L109.291294,105.169527 Z" fill="#E55B2D">

      </path>
              <path d="M145.726081,42.0651946 L36.4304238,105.169527 L36.4304238,147.234755 L109.291294,105.169527 L109.291294,147.234755 L145.726081,126.204312 L145.726081,42.0651946 Z M255.021717,63.0999794 L218.586952,84.1347419 L218.586952,126.204312 L255.021717,105.169527 L255.021717,63.0999794 Z M182.156505,147.234755 L145.726081,168.26954 L145.726081,210.339088 L182.156505,189.304303 L182.156505,147.234755 Z M145.726081,210.339088 L109.291294,189.304303 L109.291294,273.439101 L145.726081,252.404316 L145.726081,210.339088 Z" fill="#ED8E24">

      </path>
              <path d="M145.726081,-3.41864288e-05 L-1.98726454e-07,84.1347419 L36.4304238,105.169527 L145.726081,42.0651946 L218.586952,84.1347419 L255.021717,63.0999794 L145.726081,-3.41864288e-05 Z M145.726081,126.204312 L109.291294,147.234755 L145.726081,168.26954 L182.156505,147.234755 L145.726081,126.204312 Z" fill="#F8BF3C">

      </path>
          </g>
      </svg>
    ),
    pytorch: () => (
      <svg width="800px" height="800px" viewBox="-27 0 310 310" version="1.1" xmlns="http://www.w3.org/2000/svg"  preserveAspectRatio="xMidYMid">
          <g>
              <path d="M218.281037,90.106412 C268.572988,140.398363 268.572988,221.075034 218.281037,271.716235 C169.036835,322.008186 88.0109141,322.008186 37.7189632,271.716235 C-12.5729877,221.424284 -12.5729877,140.398363 37.7189632,90.106412 L127.825375,0 L127.825375,45.053206 L119.443383,53.4351978 L59.7216917,113.156889 C22.0027285,150.177353 22.0027285,210.946794 59.7216917,248.665757 C96.7421555,286.38472 157.511596,286.38472 195.230559,248.665757 C232.949523,211.645293 232.949523,150.875853 195.230559,113.156889 L218.281037,90.106412 Z M173.227831,84.5184175 C163.969338,84.5184175 156.463847,77.0129263 156.463847,67.7544338 C156.463847,58.4959413 163.969338,50.9904502 173.227831,50.9904502 C182.486323,50.9904502 189.991814,58.4959413 189.991814,67.7544338 C189.991814,77.0129263 182.486323,84.5184175 173.227831,84.5184175 Z" fill="#EE4C2C">

      </path>
          </g>
      </svg>
    ),
    opencv: () => (
      <svg width="800px" height="800px" viewBox="-30.5 0 317 317" version="1.1" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid">
        <g>
          <path d="M96.8988295,111.577478 C73.5242954,98.0821845 62.1282337,70.5696577 69.1139117,44.4987526 C76.0995896,18.4278475 99.725132,0.299331211 126.715719,0.299331211 C153.706306,0.299331211 177.331848,18.4278475 184.317526,44.4987526 C191.303204,70.5696577 179.907143,98.0821845 156.532609,111.577478 L138.577759,80.4787667 C147.87684,75.1099399 152.41053,64.1646434 149.631421,53.7928665 C146.852312,43.4210897 137.453373,36.20903 126.715719,36.20903 C115.978066,36.20903 106.579126,43.4210897 103.800017,53.7928665 C101.020908,64.1646434 105.554598,75.1099399 114.853679,80.4787667 L96.8988295,111.577478 Z" fill="#FF0101">

      </path>
          <path d="M164.965719,237.292642 C141.591185,223.797348 130.195123,196.284822 137.180801,170.213917 C144.166479,144.143011 167.792022,126.014495 194.782609,126.014495 C221.773196,126.014495 245.398738,144.143011 252.384416,170.213917 C259.370094,196.284822 247.974032,223.797348 224.599498,237.292642 L206.644649,206.193931 C215.94373,200.825104 220.47742,189.879807 217.698311,179.508031 C214.919201,169.136254 205.520262,161.924194 194.782609,161.924194 C184.044955,161.924194 174.646016,169.136254 171.866907,179.508031 C169.087798,189.879807 173.621488,200.825104 182.920569,206.193931 L164.965719,237.292642 Z" fill="#0101FF" transform="translate(194.782609, 181.653569) rotate(180.000000) translate(-194.782609, -181.653569) ">

      </path>
          <path d="M119.56689,177.658863 C119.56689,204.64945 101.438373,228.274992 75.3674681,235.26067 C49.296563,242.246348 21.7840362,230.850287 8.28874269,207.475752 C-5.20655084,184.101218 -1.31956641,154.57664 17.7656607,135.491413 C36.8508879,116.406186 66.3754659,112.519202 89.7499999,126.014495 L71.7951506,157.113207 C62.4960699,151.74438 50.7503199,153.290737 43.1576523,160.883405 C35.5649847,168.476072 34.0186273,180.221822 39.3874541,189.520903 C44.7562808,198.819984 55.7015774,203.353674 66.0733542,200.574565 C76.445131,197.795456 83.6571907,188.396516 83.6571907,177.658863 L119.56689,177.658863 Z" fill="#01FF01">

      </path>
          <path d="M17.3292308,251.590635 C22.3764548,251.136856 27.4793311,251.141137 32.5008696,251.860334 C35.5959866,252.408294 38.8794649,253.208829 41.2040134,255.464883 C43.6398662,258.183278 44.2391973,261.959064 44.7743144,265.439465 C45.6519064,272.661405 45.5491639,279.986087 44.7743144,287.212308 C44.2563211,290.739799 43.7468896,294.549833 41.4351839,297.41806 C38.9137124,299.97806 35.1892977,300.705819 31.7731104,301.245217 C26.7301672,301.874515 21.6144482,302.020067 16.5501003,301.514916 C13.1210702,301.16388 9.54220736,300.560268 6.6226087,298.60388 C4.73471572,297.405217 3.72013378,295.290435 3.03090301,293.239866 C1.64816054,288.967492 1.47264214,284.429699 1.28428094,279.977525 C1.26287625,274.095518 1.3741806,268.153579 2.52147157,262.365753 C3.14220736,259.664482 3.89565217,256.693512 6.1773913,254.891237 C9.39237458,252.558127 13.4806689,251.993043 17.3292308,251.590635 Z M18.1640134,259.651639 C16.0406689,259.972709 13.3950502,260.148227 12.1150502,262.12602 C10.9977258,265.075585 11.0362542,268.294849 10.8093645,271.398528 C10.7023411,276.933779 10.4240803,282.520401 11.2802676,288.012843 C11.5970569,289.866488 12.2477592,292.075452 14.3068896,292.61913 C18.7719064,293.984749 23.5494314,293.753579 28.1514381,293.492441 C30.4460201,293.141405 33.4897659,292.944482 34.6070903,290.542876 C35.8870903,286.886957 35.7971906,282.939933 35.9555853,279.121338 C35.904214,273.753043 36.2038796,268.282007 34.9195987,263.029298 C34.6113712,261.162809 32.676388,260.366555 31.0367893,260.036923 C26.8072241,259.206421 22.4406689,259.309164 18.1640134,259.651639 Z M63.259398,268.320535 C66.3245485,266.372709 70.130301,266.05592 73.6663545,266.37699 C76.9669565,266.659532 80.6314381,267.781137 82.3994649,270.820602 C84.5099666,274.634916 84.6298328,279.142742 84.7753846,283.397993 C84.681204,287.77311 84.5998662,292.34087 82.793311,296.407759 C81.7616054,298.87786 79.3899666,300.496054 76.8513712,301.133913 C72.9642809,302.088562 68.6919064,302.191304 64.946087,300.641605 C62.921204,299.849632 61.5213378,298.128696 60.361204,296.36495 L60.361204,316.361204 L51.7993311,316.361204 C51.803612,299.811104 51.7907692,283.256722 51.803612,266.706622 C54.5733779,266.693779 57.3431438,266.693779 60.1086288,266.706622 C60.0144482,268.410435 59.9202676,270.109967 59.8731773,271.81806 C60.900602,270.563746 61.8552508,269.185284 63.259398,268.320535 Z M66.0462876,272.789833 C64.0085619,272.948227 61.7910368,273.958528 61.2131104,276.090435 C60.1214716,279.849097 60.3141137,283.830368 60.4725084,287.700334 C60.7379264,290.221806 61.0504348,293.471037 63.7345819,294.601204 C66.6199331,295.718528 69.9505017,295.658595 72.8701003,294.703946 C75.3958528,293.813512 75.7640134,290.842542 76.0294314,288.54796 C76.2948495,284.746488 76.3890301,280.86796 75.6441472,277.113579 C75.3915719,275.65806 74.642408,274.155452 73.2211371,273.543278 C70.9779264,272.554381 68.443612,272.605753 66.0462876,272.789833 Z M95.0196656,268.384749 C99.2278261,266.222876 104.155184,266.145819 108.774314,266.364147 C112.618595,266.685217 117.284816,267.327358 119.40388,271.004682 C121.792642,275.444013 121.403077,280.666756 121.73699,285.538462 L98.3159866,285.538462 C98.5899666,288.051371 98.2646154,290.761204 99.5317726,293.064348 C100.614849,294.883746 102.913712,295.256187 104.857258,295.363211 C107.258863,295.380334 109.844548,295.577258 112.057793,294.459933 C113.32495,293.466756 113.333512,291.70301 113.496187,290.247492 C116.235987,290.243211 118.975786,290.243211 121.715585,290.247492 C121.612843,293.107157 121.244682,296.309298 118.9501,298.321338 C115.503946,301.412174 110.572308,301.733244 106.162943,301.818863 C102.271572,301.703278 98.1618729,301.506355 94.6771906,299.588495 C91.8560535,297.923211 90.9570569,294.502742 90.4604682,291.488963 C89.8311706,287.011104 89.6727759,282.447625 90.207893,277.952642 C90.6445485,274.403746 91.5991973,270.229833 95.0196656,268.384749 Z M100.02408,273.834381 C98.2346488,275.465418 98.4101672,278.17097 98.3331104,280.388495 C103.367492,280.414181 108.401873,280.401338 113.440535,280.392776 C113.431973,278.39786 113.624615,276.223144 112.545819,274.446555 C111.488428,273.008161 109.506355,272.91398 107.879599,272.738462 C105.255385,272.699933 102.361472,272.41311 100.02408,273.834381 Z M139.969498,268.363344 C142.931906,266.308495 146.759064,266.021672 150.243746,266.42408 C153.210435,266.736589 156.352642,267.866756 158.103545,270.426756 C159.657525,272.5501 160.0899,275.255652 160.111304,277.828495 C160.098462,285.679732 160.115585,293.526689 160.107023,301.377926 C157.39291,301.382207 154.683077,301.382207 151.977525,301.377926 C151.964682,293.950502 151.986087,286.527358 151.964682,279.104214 C151.883344,277.481739 151.947559,275.606689 150.727492,274.356656 C149.426087,272.948227 147.38408,272.674247 145.564682,272.68709 C143.364281,272.674247 140.98408,273.05097 139.288829,274.570702 C137.632107,275.983411 137.002809,278.26087 136.994247,280.36709 C136.981405,287.370702 136.998528,294.374314 136.985686,301.373645 C134.275853,301.382207 131.56602,301.382207 128.860468,301.377926 C128.856187,289.819398 128.856187,278.26087 128.860468,266.702341 C131.523211,266.693779 134.190234,266.69806 136.852977,266.702341 C136.840134,268.731505 136.63893,270.747826 136.578997,272.77699 C137.452308,271.137391 138.368428,269.407893 139.969498,268.363344 Z M174.829164,253.174582 C179.315585,251.667692 184.097391,251.453645 188.789298,251.286689 C193.335652,251.308094 198.087492,251.350903 202.334181,253.183144 C204.491773,254.08214 205.985819,256.051371 206.713579,258.226087 C207.899398,261.475318 207.933645,264.994247 207.959331,268.414716 C204.829967,268.414716 201.700602,268.423278 198.575518,268.410435 C198.524147,266.004548 198.708227,263.307559 197.218462,261.261271 C195.711572,259.720134 193.357057,259.724415 191.35786,259.488963 C187.29097,259.411906 183.057124,259.150769 179.161472,260.554916 C177.757324,261.000134 177.029565,262.404281 176.747023,263.757057 C175.946488,267.387291 175.942207,271.13311 175.946488,274.83612 C175.993579,279.784883 175.916522,284.806421 176.973913,289.673846 C177.252174,291.454716 178.891773,292.550635 180.535652,292.944482 C184.337124,293.890569 188.305552,293.753579 192.188361,293.522408 C194.213244,293.25699 196.679064,293.124281 197.950502,291.266355 C199.307559,289.048829 199.080669,286.321873 199.007893,283.830368 C202.167224,283.817525 205.322274,283.821806 208.481605,283.830368 C208.443077,287.764548 208.374582,291.827157 206.944749,295.551572 C206.208428,297.499398 204.688696,299.151839 202.719465,299.896722 C198.853779,301.446421 194.615652,301.544883 190.514515,301.793177 C185.758395,301.874515 180.942341,301.75893 176.293244,300.650167 C173.566288,299.939532 170.586756,298.689498 169.32388,295.979666 C167.709967,292.396522 167.414582,288.41097 166.999331,284.553846 C166.652575,279.459532 166.429967,274.356656 166.554114,269.253779 C166.798127,265.122676 167.174849,260.768963 169.405217,257.168696 C170.591037,255.165217 172.671572,253.910903 174.829164,253.174582 Z M210.022742,251.731906 C213.284816,251.736187 216.54689,251.642007 219.804682,251.778997 C222.976856,261.843478 226.461538,271.805217 229.663679,281.856856 C230.909431,285.718261 231.791304,289.69097 233.079866,293.539532 C234.522542,289.387023 235.447224,285.071839 236.859933,280.910769 C239.989298,271.188763 243.204281,261.496722 246.329365,251.774716 C249.548629,251.637726 252.776455,251.757592 256,251.714783 L256,252.780736 C250.700201,268.932709 245.524548,285.127492 240.331773,301.317993 C235.485753,301.416455 230.631171,301.429298 225.785151,301.309431 C220.622341,284.75505 215.211237,268.277726 210.022742,251.731906 Z" fill="#050505">

      </path>
        </g>
      </svg>
    ),
    github: () => (
<svg width="800px" height="800px" viewBox="0 -0.5 48 48" version="1.1" xmlns="http://www.w3.org/2000/svg">
    
    <title>Github-color</title>
    <desc>Created with Sketch.</desc>
    <defs>

</defs>
    <g id="Icons" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="Color-" transform="translate(-700.000000, -560.000000)" fill="#3E75C3">
            <path d="M723.9985,560 C710.746,560 700,570.787092 700,584.096644 C700,594.740671 706.876,603.77183 716.4145,606.958412 C717.6145,607.179786 718.0525,606.435849 718.0525,605.797328 C718.0525,605.225068 718.0315,603.710086 718.0195,601.699648 C711.343,603.155898 709.9345,598.469394 709.9345,598.469394 C708.844,595.686405 707.2705,594.94548 707.2705,594.94548 C705.091,593.450075 707.4355,593.480194 707.4355,593.480194 C709.843,593.650366 711.1105,595.963499 711.1105,595.963499 C713.2525,599.645538 716.728,598.58234 718.096,597.964902 C718.3135,596.407754 718.9345,595.346062 719.62,594.743683 C714.2905,594.135281 708.688,592.069123 708.688,582.836167 C708.688,580.205279 709.6225,578.054788 711.1585,576.369634 C710.911,575.759726 710.0875,573.311058 711.3925,569.993458 C711.3925,569.993458 713.4085,569.345902 717.9925,572.46321 C719.908,571.928599 721.96,571.662047 724.0015,571.651505 C726.04,571.662047 728.0935,571.928599 730.0105,572.46321 C734.5915,569.345902 736.603,569.993458 736.603,569.993458 C737.9125,573.311058 737.089,575.759726 736.8415,576.369634 C738.3805,578.054788 739.309,580.205279 739.309,582.836167 C739.309,592.091712 733.6975,594.129257 728.3515,594.725612 C729.2125,595.469549 729.9805,596.939353 729.9805,599.18773 C729.9805,602.408949 729.9505,605.006706 729.9505,605.797328 C729.9505,606.441873 730.3825,607.191834 731.6005,606.9554 C741.13,603.762794 748,594.737659 748,584.096644 C748,570.787092 737.254,560 723.9985,560" id="Github">

</path>
        </g>
    </g>
</svg>
    ),
    python: () => (
      <svg width="800px" height="800px" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M13.0164 2C10.8193 2 9.03825 3.72453 9.03825 5.85185V8.51852H15.9235V9.25926H5.97814C3.78107 9.25926 2 10.9838 2 13.1111L2 18.8889C2 21.0162 3.78107 22.7407 5.97814 22.7407H8.27322V19.4815C8.27322 17.3542 10.0543 15.6296 12.2514 15.6296H19.5956C21.4547 15.6296 22.9617 14.1704 22.9617 12.3704V5.85185C22.9617 3.72453 21.1807 2 18.9836 2H13.0164ZM12.0984 6.74074C12.8589 6.74074 13.4754 6.14378 13.4754 5.40741C13.4754 4.67103 12.8589 4.07407 12.0984 4.07407C11.3378 4.07407 10.7213 4.67103 10.7213 5.40741C10.7213 6.14378 11.3378 6.74074 12.0984 6.74074Z" fill="url(#paint0_linear_87_8204)"/>
      <path fill-rule="evenodd" clip-rule="evenodd" d="M18.9834 30C21.1805 30 22.9616 28.2755 22.9616 26.1482V23.4815L16.0763 23.4815L16.0763 22.7408L26.0217 22.7408C28.2188 22.7408 29.9998 21.0162 29.9998 18.8889V13.1111C29.9998 10.9838 28.2188 9.25928 26.0217 9.25928L23.7266 9.25928V12.5185C23.7266 14.6459 21.9455 16.3704 19.7485 16.3704L12.4042 16.3704C10.5451 16.3704 9.03809 17.8296 9.03809 19.6296L9.03809 26.1482C9.03809 28.2755 10.8192 30 13.0162 30H18.9834ZM19.9015 25.2593C19.1409 25.2593 18.5244 25.8562 18.5244 26.5926C18.5244 27.329 19.1409 27.9259 19.9015 27.9259C20.662 27.9259 21.2785 27.329 21.2785 26.5926C21.2785 25.8562 20.662 25.2593 19.9015 25.2593Z" fill="url(#paint1_linear_87_8204)"/>
      <defs>
      <linearGradient id="paint0_linear_87_8204" x1="12.4809" y1="2" x2="12.4809" y2="22.7407" gradientUnits="userSpaceOnUse">
      <stop stop-color="#327EBD"/>
      <stop offset="1" stop-color="#1565A7"/>
      </linearGradient>
      <linearGradient id="paint1_linear_87_8204" x1="19.519" y1="9.25928" x2="19.519" y2="30" gradientUnits="userSpaceOnUse">
      <stop stop-color="#FFDA4B"/>
      <stop offset="1" stop-color="#F9C600"/>
      </linearGradient>
      </defs>
      </svg>
    ),
  };

  const cards = data.map((card, index) => (
    <Card key={card.src} card={card} index={index} />
  ));

  const scrollToProjects = (e: React.MouseEvent<HTMLAnchorElement>) => {
    e.preventDefault()
    const projectsSection = document.getElementById("projects")
    if (projectsSection) {
      projectsSection.scrollIntoView({ behavior: "smooth" })
    }
  }

  const handleDownload = () => {
    // Assuming the resume is stored in the public directory
    const resumeUrl = "/new resume.pdf"
    
    // Create a temporary anchor element
    const link = document.createElement("a")
    link.href = resumeUrl
    link.download = "Kunal_Pawar_Resume.pdf" // Set the desired file name for download
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
  }

  return (
    <div className="min-h-screen w-full bg-neutral-900 flex flex-col items-center justify-center overflow-hidden">
<div id="about" className="flex flex-col items-center justify-center min-h-screen text-center px-4 py-8">
  <BlurIn
    word={
      <SparklesText
        text="Turning Ideas into Effortless User"
        className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-semibold tracking-tight text-white"
      />
    }
    duration={0.75}
  />
  <BlurIn
    word={
      <SparklesText
        text="Experiences"
        className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-semibold tracking-tight text-white"
      />
    }
    className="mt-2 sm:mt-4"
    duration={1.5}
  />

  <TextGenerateEffect
    words="Kunal Pawar, here. I'm a Next.js developer based in India."
    className="relative z-10 text-xl sm:text-2xl md:text-3xl mt-4 leading-tight max-w-xl mx-auto text-center tracking-tight font-medium text-white"
    filter={true}
    duration={1.5}
  />

  <motion.div
    className="mt-4 sm:mt-6 flex flex-col sm:flex-row gap-4"
    initial={{ opacity: 0 }}
    animate={{ opacity: 1 }}
    transition={{ delay: 2, duration: 1 }}
  >
  <Link href="#projects" onClick={scrollToProjects} passHref>
      <ShinyButton className="w-full sm:w-auto text-base sm:text-lg font-semibold z-50">
        Take me to projects
      </ShinyButton>
  </Link>
  <ShinyButton 
      onClick={handleDownload}
      className="w-full sm:w-auto text-base sm:text-lg font-semibold z-50"
      aria-label="Download resume"
    >
      Download resume
    </ShinyButton>
  </motion.div>
</div>

    <div className="flex justify-center fixed bottom-4 left-0 right-0 z-50">
      <FloatingDock
        mobileClassName="translate-y-30 left-40" // only for demo, remove for production
        items={links}
      />
    </div>


      <div className="w-full h-full py-20">
      <Carousel items={cards} />
      </div>

    <div className="flex flex-col lg:flex-row justify-center items-center lg:items-start lg:space-x-20 space-y-20 lg:space-y-0 w-full px-4 lg:px-8 py-20">
    <div className="relative flex h-[500px] w-full max-w-[300px] sm:max-w-sm md:max-w-md lg:max-w-lg flex-col items-center justify-center overflow-hidden rounded-lg bg-[#0A1A2F] shadow-xl p-4">
      <span className="pointer-events-none whitespace-pre-wrap text-center text-xl sm:text-2xl md:text-4xl font-semibold leading-none text-white mb-4">
        My Techstack
      </span>

      {/* Inner Circles */}
      <OrbitingCircles
        className="size-[20px] sm:size-[25px] md:size-[30px] border-none bg-transparent"
        duration={20}
        delay={6}
        radius={40}
        sm-radius={50}
        md-radius={60}
      >
        <Icons.HTML />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[20px] sm:size-[25px] md:size-[30px] border-none bg-transparent"
        duration={20}
        delay={12}
        radius={40}
        sm-radius={50}
        md-radius={60}
      >
        <Icons.CSS />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[20px] sm:size-[25px] md:size-[30px] border-none bg-transparent"
        radius={40}
        sm-radius={50}
        md-radius={60}
        duration={20}
        delay={19}
      >
        <Icons.JS />
      </OrbitingCircles>

      {/* Middle Circles */}
      <OrbitingCircles
        className="size-[25px] sm:size-[35px] md:size-[40px] border-none bg-transparent"
        radius={90}
        sm-radius={110}
        md-radius={130}
        duration={20}
        delay={5}
        reverse
      >
        <Icons.Next />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[25px] sm:size-[35px] md:size-[40px] border-none bg-transparent"
        duration={20}
        delay={10}
        radius={90}
        sm-radius={110}
        md-radius={130}
        reverse
      >
        <Icons.Mongo />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[30px] sm:size-[40px] md:size-[50px] border-none bg-transparent"
        duration={20}
        delay={15}
        radius={90}
        sm-radius={110}
        md-radius={130}
        reverse
      >
        <Icons.Mysql />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[25px] sm:size-[35px] md:size-[40px] border-none bg-transparent"
        duration={20}
        delay={20}
        radius={90}
        sm-radius={110}
        md-radius={130}
        reverse
      >
        <Icons.firebase />
      </OrbitingCircles>

      {/* Outer Circles */}
      <OrbitingCircles
        className="size-[30px] sm:size-[40px] md:size-[50px] border-none bg-transparent"
        duration={20}
        delay={4}
        radius={140}
        sm-radius={165}
        md-radius={190}
      >
        <Icons.tf />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[30px] sm:size-[40px] md:size-[50px] border-none bg-transparent"
        duration={20}
        delay={9}
        radius={140}
        sm-radius={165}
        md-radius={190}
      >
        <Icons.pytorch />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[30px] sm:size-[40px] md:size-[50px] border-none bg-transparent"
        duration={20}
        delay={13}
        radius={140}
        sm-radius={165}
        md-radius={190}
      >
        <Icons.opencv />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[30px] sm:size-[40px] md:size-[50px] border-none bg-transparent"
        duration={20}
        delay={17}
        radius={140}
        sm-radius={165}
        md-radius={190}
      >
        <Icons.github />
      </OrbitingCircles>
      <OrbitingCircles
        className="size-[30px] sm:size-[40px] md:size-[50px] border-none bg-transparent"
        duration={20}
        delay={20}
        radius={140}
        sm-radius={165}
        md-radius={190}
      >
        <Icons.python />
      </OrbitingCircles>
    </div>

      <div className="py-6 dark:bg-black bg-neutral-900 w-full px-4">
      <div className="max-w-4xl mx-auto text-center">
        <p className="font-bold text-2xl sm:text-4xl dark:text-white text-white">
          Remote{" "}
          <span className="text-neutral-400">
            {"Connectivity".split("").map((char, idx) => (
              <motion.span
                key={idx}
                className="inline-block"
                initial={{ x: -10, opacity: 0 }}
                animate={{ x: 0, opacity: 1 }}
                transition={{ duration: 0.3, delay: idx * 0.02 }}
              >
                {char}
              </motion.span>
            ))}
          </span>
        </p>
        <p className="text-sm sm:text-lg text-neutral-500 max-w-2xl mx-auto py-4">
          Break the traditional boundaries. Work with me from anywhere. I&apos;m flexible to work with different timezones.
        </p>
      </div>
        <WorldMap
          dots={[
            {
              start: {
                lat: 64.2008,
                lng: -149.4937,
              }, // Alaska (Fairbanks)
              end: {
                lat: 34.0522,
                lng: -118.2437,
              }, // Los Angeles
            },
            {
              start: { lat: 64.2008, lng: -149.4937 }, // Alaska (Fairbanks)
              end: { lat: -15.7975, lng: -47.8919 }, // Brazil (BrasÃ­lia)
            },
            {
              start: { lat: -15.7975, lng: -47.8919 }, // Brazil (BrasÃ­lia)
              end: { lat: 38.7223, lng: -9.1393 }, // Lisbon
            },
            {
              start: { lat: 51.5074, lng: -0.1278 }, // London
              end: { lat: 28.6139, lng: 77.209 }, // New Delhi
            },
            {
              start: { lat: 28.6139, lng: 77.209 }, // New Delhi
              end: { lat: 43.1332, lng: 131.9113 }, // Vladivostok
            },
            {
              start: { lat: 28.6139, lng: 77.209 }, // New Delhi
              end: { lat: -1.2921, lng: 36.8219 }, // Nairobi
            },
          ]}
        />
      </div>

    </div>
      
      <div className="w-full bg-neutral-900 flex flex-col items-center justify-center overflow-hidden">
      <div id="projects" className="w-full py-12 sm:py-20 flex flex-col items-center justify-center overflow-hidden rounded-md">
      <h1 className="text-3xl md:text-5xl lg:text-6xl font-bold text-center text-white relative z-20 mb-8">
        Projects
      </h1>
      <div className="w-full max-w-[40rem] h-40 relative">
        {/* Gradients */}
        <div className="absolute inset-x-20 top-0 bg-gradient-to-r from-transparent via-indigo-500 to-transparent h-[2px] w-3/4 blur-sm" />
        <div className="absolute inset-x-20 top-0 bg-gradient-to-r from-transparent via-indigo-500 to-transparent h-px w-3/4" />
        <div className="absolute inset-x-60 top-0 bg-gradient-to-r from-transparent via-sky-500 to-transparent h-[5px] w-1/4 blur-sm" />
        <div className="absolute inset-x-60 top-0 bg-gradient-to-r from-transparent via-sky-500 to-transparent h-px w-1/4" />
 
        {/* Core component */}
        <SparklesCore
          background="transparent"
          minSize={0.4}
          maxSize={1}
          particleDensity={1200}
          className="w-full h-full"
          particleColor="#FFFFFF"
        />
 
        {/* Radial Gradient to prevent sharp edges */}
        <div className="absolute inset-0 w-full h-full bg-neutral-900 [mask-image:radial-gradient(350px_200px_at_top,transparent_20%,white)]"></div>
      </div>
    </div>

    <div className="w-full px-4 sm:px-6 flex flex-col items-center justify-center space-y-10 sm:space-y-12 md:space-y-16">
    <div className="w-full flex flex-col lg:flex-row items-center justify-center space-y-10 lg:space-y-0 lg:space-x-10">
      <PinContainer
        title="CodingHub"
        href="https://github.com/Kp4103/Codinghub"
      >
        <div className="flex basis-full flex-col p-4 tracking-tight text-slate-100/50 sm:basis-1/2 w-[20rem] h-[20rem]">
          <h3 className="max-w-xs !pb-2 !m-0 font-bold text-base text-slate-100">
            CodingHub
          </h3>
          <div className="text-base !m-0 !p-0 font-normal">
            <span className="text-slate-500">
              CodingHub - Educational Platform
            </span>
          </div>
          <div className="relative flex flex-1 w-full mt-4 overflow-hidden">
            <div className="relative w-full h-0 pb-[56.25%] rounded-lg overflow-hidden">
              <Image
                src="/images/codinghub.png"
                alt="CodingHub Educational Platform"
                fill
                className="object-cover rounded-lg"
              />
            </div>
          </div>
        </div>
      </PinContainer>

      <PinContainer
        title="Manufacturing Defect Detection"
        href="https://github.com/Kp4103/Manufacturing-Defect-Detection-Hackathon"
      >
        <div className="flex basis-full flex-col p-4 tracking-tight text-slate-100/50 sm:basis-1/2 w-[20rem] h-[20rem]">
          <h3 className="max-w-xs !pb-2 !m-0 font-bold text-base text-slate-100">
          Manufacturing Defect Detection
          </h3>
          <div className="text-base !m-0 !p-0 font-normal">
            <span className="text-slate-500">
            Defect Detection for Broken Cups and TVs
            </span>
          </div>
          <div className="relative flex flex-1 w-full mt-4 overflow-hidden">
            <div className="relative w-full h-0 pb-[56.25%] rounded-lg overflow-hidden">
              <Image
                src="/images/broken detection.webp"
                alt="CodingHub Educational Platform"
                fill
                className="object-cover rounded-lg"
              />
            </div>
          </div>
        </div>
      </PinContainer>

      <PinContainer
        title="SocialMood"
        href="https://github.com/Kp4103/SocialMood"
      >
        <div className="flex basis-full flex-col p-4 tracking-tight text-slate-100/50 sm:basis-1/2 w-[20rem] h-[20rem]">
          <h3 className="max-w-xs !pb-2 !m-0 font-bold text-base text-slate-100">
          SocialMood 
          </h3>
          <div className="text-base !m-0 !p-0 font-normal">
            <span className="text-slate-500">
              A Sentiment Detection & Analysis Platform
            </span>
          </div>
          <div className="relative flex flex-1 w-full mt-4 overflow-hidden">
            <div className="relative w-full h-0 pb-[56.25%] rounded-lg overflow-hidden">
              <Image
                src="/images/SocialMood.png"
                alt="CodingHub Educational Platform"
                fill
                className="object-cover rounded-lg"
              />
            </div>
          </div>
        </div>
      </PinContainer>
    </div>

    <div className="w-full flex flex-col lg:flex-row items-center justify-center space-y-10 lg:space-y-0 lg:space-x-10">
      <PinContainer
        title="PixaShield"
        href="https://github.com/Kp4103/RJPOLICE_HACK_238_PIXASHIELD_3"
      >
        <div className="flex basis-full flex-col p-4 tracking-tight text-slate-100/50 sm:basis-1/2 w-[20rem] h-[20rem]">
          <h3 className="max-w-xs !pb-2 !m-0 font-bold text-base text-slate-100">
            PixaShield
          </h3>
          <div className="text-base !m-0 !p-0 font-normal">
            <span className="text-slate-500">
            AI Intelligent Camera Solution
            </span>
          </div>
          <div className="relative flex flex-1 w-full mt-4 overflow-hidden">
            <div className="relative w-full h-0 pb-[56.25%] rounded-lg overflow-hidden">
              <Image
                src="/images/Pixashield.webp"
                alt="CodingHub Educational Platform"
                fill
                className="object-cover rounded-lg"
              />
            </div>
          </div>
        </div>
      </PinContainer>

      <PinContainer
        title="FraudFinder"
        href="https://github.com/Kp4103/FraudFinder"
      >
        <div className="flex basis-full flex-col p-4 tracking-tight text-slate-100/50 sm:basis-1/2 w-[20rem] h-[20rem]">
          <h3 className="max-w-xs !pb-2 !m-0 font-bold text-base text-slate-100">
          FraudFinder
          </h3>
          <div className="text-base !m-0 !p-0 font-normal">
            <span className="text-slate-500">
            Ethereum fraud detection
            </span>
          </div>
          <div className="relative flex flex-1 w-full mt-4 overflow-hidden">
            <div className="relative w-full h-0 pb-[56.25%] rounded-lg overflow-hidden">
              <Image
                src="/images/FraudFinder.webp"
                alt="CodingHub Educational Platform"
                fill
                className="object-cover rounded-lg"
              />
            </div>
          </div>
        </div>
      </PinContainer>
      </div>
    </div>
    </div>

      <BlurIn
        word="Testimonials"
        className="md:text-7xl text-3xl lg:text-6xl font-bold text-center text-white relative z-20 mt-20"
      />

      <div id="testimonials" className="z-20">
      <AnimatedTestimonials testimonials={testimonials} />
      </div>

      <div className="w-full">
      <Timeline data={data1} />
    </div>

    <div className="flex flex-col items-center justify-center h-[40rem]">
    <TypewriterEffectSmooth words={words} />
    <p className="text-neutral-300 dark:text-neutral-200 text-2xl sm:text-4xl mb-6">
      Begin your journey now
    </p>
    <div id="contact" className="flex flex-col md:flex-row space-y-8 md:space-y-8 space-x-0 md:space-x-4 z-50">
      <a href="mailto:kunal4103@gmail.com">
        <RainbowButton>Contact me!</RainbowButton>
      </a>
    </div>
    </div>

      <div className="w-full py-4 bg-neutral-900 text-left mt-auto">
      <p className="text-xs sm:text-sm text-neutral-300">
        &copy; {new Date().getFullYear()} Kunal Pawar. All Rights Reserved.
      </p>
    </div>
    <div className="absolute inset-0 z-0 h-full w-full">
    <ShootingStars />
    <StarsBackground />
    </div>
    </div>
  );
}

export default CustomGridDemo;

